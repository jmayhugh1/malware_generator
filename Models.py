from openai import OpenAI
import os
import re
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
import PyPDF2

class Models:
    def __init__(self, pdf_path) -> None:
          # Replace with your actual API key

        pdf_text = self.extract_pdf(pdf_path)
        prompt_instruction = f"explain the best algorithm for the process discussed in this: {pdf_text}"
        self.instructions = self.generate_text(prompt_instruction)

        prompt_code = f"Write  Python code to implement the following instructions: {self.instructions}"
        self.code = self.generate_text(prompt_code)
        self.code = self.extract_code(self.code)

    def generate_text(self, prompt):
        response = client.chat.completions.create(model="gpt-3.5-turbo",  
        messages=[
            {"role": "system", "content": "You are a helpful assistant."},
            {"role": "user", "content": prompt},
        ],
        max_tokens=200,
        n=1,
        stop=None,
        temperature=0.7)
        return response.choices[0].message.content.strip()

    def extract_pdf(self, pdf_path):
        with open(pdf_path, 'rb') as file:
            reader = PyPDF2.PdfReader(file)
            text = ""
            for page in reader.pages:
                text += page.extract_text()
        text = text.replace("\n", " ")
        return text
    '''
    takes llm output and finds the code from it
    '''
    def extract_code(self, text):
        start = text.rfind("```python")
        end = text.rfind("```")
        code = text[start + 9:end]
        return code

